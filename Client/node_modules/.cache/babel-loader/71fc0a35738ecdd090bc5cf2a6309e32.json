{"ast":null,"code":"var _jsxFileName = \"D:\\\\demian _shared\\\\Sneakers\\\\src\\\\component\\\\display.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport data from \"../data/sneakers_data.json\";\nimport \"../style/display.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display() {\n  _s();\n\n  const [Images, setImages] = useState(\"../images/image-product-1.jpg\");\n  const [PrvImages, setPrvImages] = useState([]);\n  let Data = [];\n  useEffect(() => {\n    Data = data; //Should retrieve already formate data\n    // let temp: PrevImages = Data[0].img;\n    // temp.forEach((element) => {\n    // \tsetPrvImages(...PrvImages, require(element.preview.toString()));\n    // \tconsole.log(require(element.preview));\n    // });\n    // console.log(PrvImages);\n  }, [Images, setPrvImages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_img_container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `Images`.toString(),\n        className: \"main_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview_img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Display, \"NjTs0t9P1aLzOL3QfMQA+N9cLPA=\");\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["D:/demian _shared/Sneakers/src/component/display.tsx"],"names":["useState","useEffect","data","Display","Images","setImages","PrvImages","setPrvImages","Data","toString"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAO,sBAAP;;;AASA,SAASC,OAAT,GAAmB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,+BAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAAmCP,QAAQ,CAAC,EAAD,CAAjD;AAEA,MAAIQ,IAAc,GAAG,EAArB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,IAAI,GAAGN,IAAP,CADe,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATQ,EASN,CAACE,MAAD,EAASG,YAAT,CATM,CAAT;AAWA,sBACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACC;AAAK,QAAA,GAAG,EAAG,QAAD,CAASE,QAAT,EAAV;AAA+B,QAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAA;AAAA;AAAA;AAAA,YAJD,eAUC;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;GA9BQN,O;;KAAAA,O;AAgCT,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport data from \"../data/sneakers_data.json\";\r\nimport \"../style/display.css\";\r\n\r\ntype Sneakers = {\r\n\tid: string;\r\n\tname: string;\r\n\timg: { display: string; preview: string }[];\r\n}[];\r\ntype PrevImages = { display: string; preview: string }[];\r\n\r\nfunction Display() {\r\n\tconst [Images, setImages] = useState(\"../images/image-product-1.jpg\");\r\n\tconst [PrvImages, setPrvImages]: any[] = useState([]);\r\n\r\n\tlet Data: Sneakers = [];\r\n\tuseEffect(() => {\r\n\t\tData = data;\r\n\t\t//Should retrieve already formate data\r\n\t\t// let temp: PrevImages = Data[0].img;\r\n\t\t// temp.forEach((element) => {\r\n\t\t// \tsetPrvImages(...PrvImages, require(element.preview.toString()));\r\n\t\t// \tconsole.log(require(element.preview));\r\n\t\t// });\r\n\t\t// console.log(PrvImages);\r\n\t}, [Images, setPrvImages]);\r\n\r\n\treturn (\r\n\t\t<div className='display_container'>\r\n\t\t\t<div className='main_img_container'>\r\n\t\t\t\t<img src={`Images`.toString()} className='main_img' />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{/* {Data[0].img.map((data) => {\r\n\t\t\t\t\tconsole.log(data.preview);\r\n\t\t\t\t\treturn <img src={data.preview} />;\r\n\t\t\t\t})} */}\r\n\t\t\t</div>\r\n\t\t\t<div className='preview_img'></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Display;\r\n"]},"metadata":{},"sourceType":"module"}