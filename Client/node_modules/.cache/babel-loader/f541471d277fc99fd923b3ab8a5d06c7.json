{"ast":null,"code":"var _jsxFileName = \"D:\\\\demian _shared\\\\Sneakers\\\\src\\\\components\\\\flipText.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"../style/flipText.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FlipText(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [HtmlArr, setHtmlArr] = useState([\"ini\"]);\n  const [Index, setIndex] = useState(0);\n  useEffect(() => {\n    // for (let i = 0; i < data.length; i++) {\n    // \tlet letterArr: string[] = data[i];\n    // \tconsole.log(letterArr);\n    // \tawait setHtmlArr([\"\"]);\n    // \t//setTimeout(() => {\n    // \tfor (let j = 0; j < 7; j++) {\n    // \t\tlet letter: string = letterArr[j];\n    // \t\tlet temp: string[] = HtmlArr;\n    // \t\ttemp.push(letter);\n    // \t\tconsole.log(temp);\n    // \t\tsetHtmlArr(temp);\n    // \t}\n    // \t//}, 2000);\n    // }\n    function setingEx(temp) {\n      setHtmlArr([...HtmlArr], [...temp]);\n    }\n\n    function DelayLoop(i) {\n      setTimeout(() => {\n        let letter = data[Index][i];\n        let temp = [...HtmlArr];\n        temp.push(letter);\n        console.log(HtmlArr);\n        setingEx(temp);\n\n        if (i < data[Index].length - 1) {\n          DelayLoop(i + 1);\n        }\n      }, 1000 / (data[Index].length - 1));\n    }\n\n    DelayLoop(0);\n    console.log(Index);\n    setTimeout(() => {\n      for (let i = 0; i < data[Index].length; i++) {}\n    }, 1000); //}, 2000);\n\n    setTimeout(() => {\n      if (Index < data.length - 1) {\n        setHtmlArr([]);\n        setIndex(Index + 1);\n      }\n    }, 3000);\n  }, [Index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"flip_container\",\n    children: HtmlArr.map((element, index) => {\n      console.log(HtmlArr);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter\",\n        children: element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n\n_s(FlipText, \"yMjmYODNGQf31O/qPpFjsu/rBNo=\");\n\n_c = FlipText;\nexport default FlipText;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlipText\");","map":{"version":3,"sources":["D:/demian _shared/Sneakers/src/components/flipText.tsx"],"names":["useState","useEffect","FlipText","data","HtmlArr","setHtmlArr","Index","setIndex","setingEx","temp","DelayLoop","i","setTimeout","letter","push","console","log","length","map","element","index"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,uBAAP;;;AAMA,SAASC,QAAT,OAAkC;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAW,CAAC,KAAD,CAAX,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,aAASO,QAAT,CAAkBC,IAAlB,EAAkC;AACjCJ,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,EAAe,CAAC,GAAGK,IAAJ,CAAf,CAAV;AACA;;AAED,aAASC,SAAT,CAAmBC,CAAnB,EAA8B;AAC7BC,MAAAA,UAAU,CAAC,MAAM;AAChB,YAAIC,MAAc,GAAGV,IAAI,CAACG,KAAD,CAAJ,CAAYK,CAAZ,CAArB;AACA,YAAIF,IAAc,GAAG,CAAC,GAAGL,OAAJ,CAArB;AACAK,QAAAA,IAAI,CAACK,IAAL,CAAUD,MAAV;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAI,QAAAA,QAAQ,CAACC,IAAD,CAAR;;AACA,YAAIE,CAAC,GAAGR,IAAI,CAACG,KAAD,CAAJ,CAAYW,MAAZ,GAAqB,CAA7B,EAAgC;AAC/BP,UAAAA,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT;AACA;AACD,OATS,EASP,QAAQR,IAAI,CAACG,KAAD,CAAJ,CAAYW,MAAZ,GAAqB,CAA7B,CATO,CAAV;AAUA;;AACDP,IAAAA,SAAS,CAAC,CAAD,CAAT;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAM,IAAAA,UAAU,CAAC,MAAM;AAChB,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACG,KAAD,CAAJ,CAAYW,MAAhC,EAAwCN,CAAC,EAAzC,EAA6C,CAAE;AAC/C,KAFS,EAEP,IAFO,CAAV,CArCe,CAwCf;;AAEAC,IAAAA,UAAU,CAAC,MAAM;AAChB,UAAIN,KAAK,GAAGH,IAAI,CAACc,MAAL,GAAc,CAA1B,EAA6B;AAC5BZ,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA;AACD,KALS,EAKP,IALO,CAAV;AAMA,GAhDQ,EAgDN,CAACA,KAAD,CAhDM,CAAT;AAkDA,sBACC;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA,cACEF,OAAO,CAACc,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChCL,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEA,0BACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACEe;AADF,SAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA,cADD;AAKA,KARA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GAnEQlB,Q;;KAAAA,Q;AAoET,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"../style/flipText.css\";\r\n\r\ntype Word = {\r\n\tdata: string[][];\r\n};\r\n\r\nfunction FlipText({ data }: Word) {\r\n\tconst [HtmlArr, setHtmlArr] = useState<string[]>([\"ini\"]);\r\n\tconst [Index, setIndex] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\t// for (let i = 0; i < data.length; i++) {\r\n\t\t// \tlet letterArr: string[] = data[i];\r\n\t\t// \tconsole.log(letterArr);\r\n\t\t// \tawait setHtmlArr([\"\"]);\r\n\r\n\t\t// \t//setTimeout(() => {\r\n\t\t// \tfor (let j = 0; j < 7; j++) {\r\n\t\t// \t\tlet letter: string = letterArr[j];\r\n\r\n\t\t// \t\tlet temp: string[] = HtmlArr;\r\n\t\t// \t\ttemp.push(letter);\r\n\r\n\t\t// \t\tconsole.log(temp);\r\n\t\t// \t\tsetHtmlArr(temp);\r\n\t\t// \t}\r\n\t\t// \t//}, 2000);\r\n\t\t// }\r\n\t\tfunction setingEx(temp: string[]) {\r\n\t\t\tsetHtmlArr([...HtmlArr], [...temp]);\r\n\t\t}\r\n\r\n\t\tfunction DelayLoop(i: number) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlet letter: string = data[Index][i];\r\n\t\t\t\tlet temp: string[] = [...HtmlArr];\r\n\t\t\t\ttemp.push(letter);\r\n\t\t\t\tconsole.log(HtmlArr);\r\n\t\t\t\tsetingEx(temp);\r\n\t\t\t\tif (i < data[Index].length - 1) {\r\n\t\t\t\t\tDelayLoop(i + 1);\r\n\t\t\t\t}\r\n\t\t\t}, 1000 / (data[Index].length - 1));\r\n\t\t}\r\n\t\tDelayLoop(0);\r\n\r\n\t\tconsole.log(Index);\r\n\t\tsetTimeout(() => {\r\n\t\t\tfor (let i = 0; i < data[Index].length; i++) {}\r\n\t\t}, 1000);\r\n\t\t//}, 2000);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (Index < data.length - 1) {\r\n\t\t\t\tsetHtmlArr([]);\r\n\t\t\t\tsetIndex(Index + 1);\r\n\t\t\t}\r\n\t\t}, 3000);\r\n\t}, [Index]);\r\n\r\n\treturn (\r\n\t\t<div id='flip_container'>\r\n\t\t\t{HtmlArr.map((element, index) => {\r\n\t\t\t\tconsole.log(HtmlArr);\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='letter' key={index}>\r\n\t\t\t\t\t\t{element}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default FlipText;\r\n"]},"metadata":{},"sourceType":"module"}